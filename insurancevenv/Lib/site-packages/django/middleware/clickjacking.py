"""
Clickjacking Protection Middleware.

This module provides a middleware that implements protection against a
malicious site loading resources from your site in a hidden frame.
"""

from django.conf import settings
from django.utils.deprecation import MiddlewareMixin


    # def (self, request, response):
    #     # Don't set it if it's already in the response
    #     if response.get('X-Frame-Options') is not None:
    #         return response

    #     # Don't set it if they used @xframe_options_exempt
    #     if getattr(response, 'xframe_options_exempt', False):
    #         return response

    #     response['X-Frame-Options'] = self.get_xframe_options_value(request,response)
    #     return response
def process_response(self, request, response):
# Don't set it if it's already in the response
    if response.get('X-Frame-Options') is not None:
        return response

    # Don't set it if they used @xframe_options_exempt
    if getattr(response, 'xframe_options_exempt', False):
        return response

    # Set the X-Frame-Options header
    response['X-Frame-Options'] = self.get_xframe_options_value(request, response)
    return response


def get_xframe_options_value(self, request, response):
    """
    Gets the value to set for the X_FRAME_OPTIONS header.

    By default this uses the value from the X_FRAME_OPTIONS Django
    settings. If not found in settings, defaults to 'SAMEORIGIN'.

    This method can be overridden if needed, allowing it to vary based on
    the request or response.
    """
    return getattr(settings, 'X_FRAME_OPTIONS', 'SAMEORIGIN').upper()
